<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.example.helloworld">

    <!--
         The ACCESS_COARSE/FINE_LOCATION permissions are not required to use
         Google Maps Android API v2, but you must specify either coarse or fine
         location permissions for the "MyLocation" functionality.
    -->
<!--   app permissions for app to access android features   -->
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
    <uses-permission android:name="android.permission.VIBRATE" />
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.CALL_PHONE" />

<!--   application global properties like label, icon, services, providers, themes, httpRequests, etc    -->
    <application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/AppTheme">

        <!--
             The API key for Google Maps-based APIs is defined as a string resource.
             (See the file "res/values/google_maps_api.xml").
             Note that the API key is linked to the encryption key used to sign the APK.
             You need a different API key for each encryption key, including the release key that is used to
             sign the APK for publishing.
             You can define the keys for the debug and release targets in src/debug/ and src/release/.
        -->
        
<!--      description for google map api key    -->
        <meta-data
            android:name="com.google.android.geo.API_KEY"
            android:value="@string/google_maps_key" />

<!--      activities with basic properties    -->
        <activity
            android:name=".MapsActivity"
            android:label="@string/title_activity_maps"></activity>
        <activity android:name=".AccountProvider" />
        <activity android:name=".ScrollViews" />
        <activity android:name=".CreateOrEditActivity" />
        <activity android:name=".bottom_activity" />
        <activity android:name=".top_activity" />
        <activity android:name=".End_activity" />
        <activity android:name=".Begin_activity" />
        <activity android:name=".DisplayMessageActivity" />
        
<!--      default activity launched by android system    -->
        <activity android:name=".splashscreen">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <activity android:name=".MainActivity" />

<!--      broadcast receiver registered to get pending intents    -->
        <receiver android:name=".MyBroadcastReceiver" />

<!--       background service for music  -->
        <service
            android:name=".MusicService"
            android:enabled="true" />

<!--       content provider class that provides data to external requests   -->
        <provider
            android:name=".AcProvider"
            android:authorities="com.example.helloworld.AccountProvider" />
    </application>

</manifest>
